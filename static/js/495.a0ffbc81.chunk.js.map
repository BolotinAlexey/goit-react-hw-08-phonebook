{"version":3,"file":"static/js/495.a0ffbc81.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: max-content;\n  padding: 25px;\n  border: 2px solid black;\n\n  label {\n    display: block;\n    margin-bottom: 7px;\n  }\n\n  input {\n    display: block;\n    margin-bottom: 15px;\n  }\n\n  button {\n    padding: 2px 5px;\n    margin-left: 10px;\n    background-color: #0c0;\n    color: white;\n    border: none;\n    border-radius: 5px;\n\n    :hover {\n      background-color: #0f0;\n      color: #f9f;\n    }\n    :active {\n      transform: scale(1.1);\n    }\n  }\n`;\n","const selectFilter = state => state.contacts.filter;\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.contacts.error;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n};\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handlerSubmit = e => {\n    console.log(contacts);\n    e.preventDefault();\n\n    const name = e.target.elements.name.value;\n    if (contacts.find(el => el.name === name)) {\n      alert(name + ' already exists in the phone book');\n      e.target.reset();\n      return;\n    }\n    const number = e.target.elements.number.value;\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handlerSubmit}>\n      <label htmlFor=\"name\">Name </label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label htmlFor=\"tel\">Number </label>\n      <input\n        id=\"tel\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <br />\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  width: max-content;\n  border: 1px solid black;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 300px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  :nth-of-type(odd) {\n    background-color: #ddd;\n  }\n  button {\n    padding: 2px 5px;\n    margin-left: 10px;\n    background-color: #c00;\n    color: white;\n    border: none;\n    border-radius: 5px;\n\n    :hover {\n      background-color: #f00;\n      color: white;\n    }\n    :active {\n      transform: scale(1.1);\n    }\n  }\n`;\n","import { Item } from './ContactItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nfunction ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Item>\n      <p>\n        {name}: {number}\n      </p>\n      <button onClick={onDelete}>Delete</button>\n    </Item>\n  );\n}\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { Ul } from './ContactList.styled';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux//contacts/selectors';\n\nfunction ContactList() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <Ul>\n      {visibleContacts.map(({ name, id, number }) => (\n        <ContactItem id={id} key={id} number={number} name={name} />\n      ))}\n    </Ul>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  ~ input {\n    margin-bottom: 10px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Label } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const handlerChangeFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()));\n  };\n  return (\n    <>\n      <Label htmlFor=\"filter\">Find contacts by name:</Label>\n      <input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={handlerChangeFilter}\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && <p>Loading...</p>}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","selectFilter","_ref","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","console","log","preventDefault","target","elements","value","find","el","alert","reset","number","newContact","id","nanoid","addContact","children","_jsx","htmlFor","type","pattern","title","required","Ul","Item","onClick","deleteContact","visibleContacts","map","ContactItem","Label","_Fragment","onChange","setFilter","trim","Contacts","useEffect","fetchContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}